{"version":3,"sources":["containers/MealList.js","store/actions/auth.js","store/actions/actionsTypes.js","containers/Login.js","containers/Signup.js","routes.js","containers/CustomLayout.js","App.js","serviceWorker.js","store/utility.js","store/reducers/auth.js","index.js"],"names":["MealList","state","Meals","meal_name","description","price_tag","list","axios","get","then","res","setState","data","console","log","style","width","margin","minInlineSize","grid","gutter","xs","sm","md","lg","xl","xxl","dataSource","this","renderItem","item","Item","title","extra","href","React","Component","authSuccess","token","type","authFail","error","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","connect","loading","onAuth","username","password","post","key","expirationDate","Date","getTime","setItem","catch","err","actions","props","Form","useForm","form","validateFields","errorMessage","color","message","indicator","Spin","minWidth","maxWidth","name","className","initialValues","remember","onFinish","values","isAuthenticated","errorInfo","rules","required","prefix","UserOutlined","placeholder","LockOutlined","valuePropName","noStyle","htmlType","formItemLayout","labelCol","span","wrapperCol","tailFormItemLayout","offset","RegistrationForm","residence","scrollToFirstError","label","hasFeedback","Password","dependencies","getFieldValue","validator","rule","value","Promise","reject","resolve","QuestionCircleOutlined","whitespace","_","BaseRouter","exact","path","component","Login","Header","Layout","Content","CustomLayout","float","theme","mode","onClick","to","padding","minHeight","children","withRouter","App","onTryAutoSignup","getItem","undefined","Boolean","window","location","hostname","match","updateObject","oldObject","updateProperties","initialState","authStart","action","authLogout","reducer","composeEnhances","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"mSAkDeA,E,4MA7CbC,MAAQ,CACNC,MAAO,CAAC,CAAEC,UAAW,GAAIC,YAAa,GAAIC,UAAW,KACrDC,KAAM,CAAC,M,mEAGa,IAAD,OACnBC,IAAMC,IAAI,6CAA6CC,MAAK,SAACC,GAC3D,EAAKC,SAAS,CACZT,MAAOQ,EAAIE,KACXN,KAAM,CAAC,OAETO,QAAQC,IAAIJ,EAAIE,MAChBC,QAAQC,IAAI,EAAKb,MAAMC,MAAM,GAAGC,gB,+BAKlC,OACE,yBAAKY,MAAO,CAAEC,MAAO,MAAOC,OAAQ,SAClC,kBAAC,IAAD,CACEF,MAAO,CAAEE,OAAQ,OAAQC,cAAe,QACxCC,KAAM,CACJC,OAAQ,GACRC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,IAAK,GAEPC,WAAYC,KAAK3B,MAAMC,MACvB2B,WAAY,SAACC,GAAD,OACV,kBAAC,IAAKC,KAAN,KACE,kBAAC,IAAD,CAAMC,MAAOF,EAAK3B,UAAW8B,MAAO,uBAAGC,KAAK,KAAR,SAClC,2BAAIJ,EAAK1B,aACT,2BAAI0B,EAAKzB,qB,GApCF8B,IAAMC,W,6DCKhBC,EAAc,SAACC,GAC1B,MAAO,CACLC,KCVwB,cDWxBD,MAAOA,IAIEE,EAAW,SAACC,GACvB,MAAO,CACLF,KChBqB,YDiBrBE,MAAOA,IAIEC,EAAS,WAGpB,OAFAC,aAAaC,WAAW,SACxBD,aAAaC,WAAW,kBACjB,CACLL,KCxBuB,gBD4BdM,EAAmB,SAACC,GAC/B,OAAO,SAACC,GACNC,YAAW,WACTD,EAASL,OACS,IAAjBI,K,kBEiFQG,G,OAAAA,aAjBS,SAAChD,GACvB,MAAO,CACLiD,QAASjD,EAAMiD,QACfT,MAAOxC,EAAMwC,UAIU,SAACM,GAC1B,MAAO,CACLI,OAAQ,SAACC,EAAUC,GAAX,OACNN,EFtEmB,SAACK,EAAUC,GAClC,OAAO,SAACN,GACNA,EArCK,CACLR,KCLsB,eD0CtBhC,IACG+C,KAAK,wDAAyD,CAC7DF,SAAUA,EACVC,SAAUA,IAEX5C,MAAK,SAACC,GACL,IAAM4B,EAAQ5B,EAAIE,KAAK2C,IACjBC,EAAiB,IAAIC,MAAK,IAAIA,MAAOC,UAAY,MACvDf,aAAagB,QAAQ,QAASrB,GAC9BK,aAAagB,QAAQ,iBAAkBH,GACvCT,EAASV,EAAYC,IACrBS,EAASF,EAAiB,UAE3Be,OAAM,SAACC,GACNd,EAASP,EAASqB,QEsDlBC,CAAkBV,EAAUC,GAC5BxC,QAAQC,IAAI,mBAKLmC,EA7GS,SAACc,GAAW,IAAD,EAClBC,IAAKC,UAAbC,EAD0B,oBAEjCrD,QAAQC,IAAIoD,EAAKC,gBAEjB,IAcIC,EAAe,KAKnB,OAJIL,EAAMtB,QACR2B,EAAe,uBAAGrD,MAAO,CAAEsD,MAAO,QAAUN,EAAMtB,MAAM6B,UAIxD,6BACGF,EACAL,EAAMb,QACL,kBAAC,IAAD,CAAMqB,UAAWC,MAEjB,kBAAC,IAAD,CACEN,KAAMA,EACNnD,MAAO,CAAE0D,SAAU,QAASC,SAAU,QAASzD,OAAQ,QACvD0D,KAAK,eACLC,UAAU,aACVC,cAAe,CACbC,UAAU,GAEZC,SAjCS,SAACC,GAChBnE,QAAQC,IAAI,4BAA6BkE,GACzCnE,QAAQC,IAAIiD,EAAMkB,iBAClBf,EACGC,iBACA1D,MAAK,SAACuE,GACLjB,EAAMZ,OAAO6B,EAAO5B,SAAU4B,EAAO3B,aAItCO,OAAM,SAACsB,GACNnB,EAAMkB,iBAAkB,OAwBtB,kBAAC,IAAKlD,KAAN,CACE4C,KAAK,WACLQ,MAAO,CACL,CACEC,UAAU,EACVd,QAAS,iCAIb,kBAAC,IAAD,CACEe,OAAQ,kBAACC,EAAA,EAAD,CAAcV,UAAU,wBAChCW,YAAY,cAGhB,kBAAC,IAAKxD,KAAN,CACE4C,KAAK,WACLQ,MAAO,CACL,CACEC,UAAU,EACVd,QAAS,iCAIb,kBAAC,IAAD,CACEe,OAAQ,kBAACG,EAAA,EAAD,CAAcZ,UAAU,wBAChCrC,KAAK,WACLgD,YAAY,cAGhB,kBAAC,IAAKxD,KAAN,KACE,kBAAC,IAAKA,KAAN,CAAW4C,KAAK,WAAWc,cAAc,UAAUC,SAAO,GACxD,kBAAC,IAAD,qBAGF,uBAAGd,UAAU,qBAAb,oBAGF,kBAAC,IAAK7C,KAAN,KACE,kBAAC,IAAD,CACEQ,KAAK,UACLoD,SAAS,SACTf,UAAU,qBAHZ,UADF,MAQK,uBAAG1C,KAAK,WAAR,oB,kBCvFT0D,EAAiB,CACrBC,SAAU,CACRxE,GAAI,CACFyE,KAAM,IAERxE,GAAI,CACFwE,KAAM,IAGVC,WAAY,CACV1E,GAAI,CACFyE,KAAM,IAERxE,GAAI,CACFwE,KAAM,MAINE,EAAqB,CACzBD,WAAY,CACV1E,GAAI,CACFyE,KAAM,GACNG,OAAQ,GAEV3E,GAAI,CACFwE,KAAM,GACNG,OAAQ,KA8HCC,EAzHU,WAAO,IAAD,EACdlC,IAAKC,UAAbC,EADsB,oBAO7B,OACE,kBAAC,IAAD,iBACM0B,EADN,CAEE1B,KAAMA,EACNS,KAAK,WACLI,SATa,SAACC,GAChBnE,QAAQC,IAAI,4BAA6BkE,IASvCH,cAAe,CACbsB,UAAW,CAAC,WAAY,WAAY,QACpCd,OAAQ,MAEVe,oBAAkB,IAElB,kBAAC,IAAKrE,KAAN,CACE4C,KAAK,QACL0B,MAAM,SACNlB,MAAO,CACL,CACE5C,KAAM,QACN+B,QAAS,kCAEX,CACEc,UAAU,EACVd,QAAS,+BAIb,kBAAC,IAAD,OAGF,kBAAC,IAAKvC,KAAN,CACE4C,KAAK,WACL0B,MAAM,WACNlB,MAAO,CACL,CACEC,UAAU,EACVd,QAAS,gCAGbgC,aAAW,GAEX,kBAAC,IAAMC,SAAP,OAGF,kBAAC,IAAKxE,KAAN,CACE4C,KAAK,UACL0B,MAAM,mBACNG,aAAc,CAAC,YACfF,aAAW,EACXnB,MAAO,CACL,CACEC,UAAU,EACVd,QAAS,iCAEX,gBAAGmC,EAAH,EAAGA,cAAH,MAAwB,CACtBC,UADsB,SACZC,EAAMC,GACd,OAAKA,GAASH,EAAc,cAAgBG,EAIrCC,QAAQC,OACb,oDAJOD,QAAQE,eAUvB,kBAAC,IAAMR,SAAP,OAGF,kBAAC,IAAKxE,KAAN,CACE4C,KAAK,WACL0B,MACE,6CAEE,kBAAC,IAAD,CAASrE,MAAM,wCACb,kBAACgF,EAAA,EAAD,QAIN7B,MAAO,CACL,CACEC,UAAU,EACVd,QAAS,8BACT2C,YAAY,KAIhB,kBAAC,IAAD,OAGF,kBAAC,IAAKlF,KAAN,eACE4C,KAAK,YACLc,cAAc,UACdN,MAAO,CACL,CACEuB,UAAW,SAACQ,EAAGN,GAAJ,OACTA,EACIC,QAAQE,UACRF,QAAQC,OAAO,+BAGrBd,GAEJ,kBAAC,IAAD,mCAEF,kBAAC,IAAKjE,KAASiE,EACb,kBAAC,IAAD,CAAQzD,KAAK,UAAUoD,SAAS,UAAhC,eCtIOwB,EARI,kBACjB,6BACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWtH,IACjC,kBAAC,IAAD,CAAOoH,OAAK,EAACC,KAAK,SAASC,UAAWC,IACtC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,UAAUC,UAAWpB,M,mCCLnCsB,EAAoBC,IAApBD,OAAQE,EAAYD,IAAZC,QAEVC,E,uKAEF,OACE,kBAAC,IAAD,KACE,kBAACH,EAAD,CAAQ5C,UAAU,UAChB,yBAAKA,UAAU,SACf,kBAAC,IAAD,CAAM7D,MAAO,CAAE6G,MAAO,SAAWC,MAAM,OAAOC,KAAK,cAChDjH,QAAQC,IAAR,aACAD,QAAQC,IAAIc,MACZf,QAAQC,IAAIc,KAAKmC,OAEjBnC,KAAKmC,MAAMkB,iBACPpE,QAAQC,IAAR,2BAAgCc,KAAKmC,MAAMkB,kBAE1C,kBAAC,IAAKlD,KAAN,CAAWwB,IAAI,IAAIwE,QAASnG,KAAKmC,MAAMrB,QAAvC,YAID7B,QAAQC,IAAR,2BAAgCc,KAAKmC,MAAMkB,kBAE1C,kBAAC,IAAKlD,KAAN,CAAWwB,IAAI,KACb,kBAAC,IAAD,CAAMyE,GAAG,UAAT,aAKZ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQjH,MAAO,CAAEkH,QAAS,gBACxB,kBAACP,EAAD,CACE9C,UAAU,yBACV7D,MAAO,CACLkH,QAAS,GACThH,OAAQ,EACRiH,UAAW,MAGZtG,KAAKmC,MAAMoE,iB,GApCChG,IAAMC,WAmDlBgG,cAAWnF,YAAQ,MANP,SAACF,GAC1B,MAAO,CACLL,OAAQ,kBAAMK,EAASe,SAIDb,CAAkC0E,ICnDtDU,E,kLAEFzG,KAAKmC,MAAMuE,oB,+BAGX,OACE,6BACE,kBAAC,IAAD,KACE,kBAAC,EAAiB1G,KAAKmC,MACrB,kBAAC,EAAD,a,GATM3B,aA4BHa,eAXS,SAAChD,GACvB,MAAO,CACLgF,gBAAiC,OAAhBhF,EAAMqC,UAIA,SAACS,GAC1B,MAAO,CACLuF,gBAAiB,kBAAMvF,GNsDlB,SAACA,GACN,IAAMT,EAAQK,aAAa4F,QAAQ,SACnC,QAAcC,IAAVlG,EACFS,EAASL,SACJ,CACL,IAAMc,EAAiB,IAAIC,KAAKd,aAAa4F,QAAQ,mBACjD/E,GAAkB,IAAIC,KACxBV,EAASL,MAETK,EAASV,EAAYC,IACrBS,EACEF,GACGW,EAAeE,WAAY,IAAID,MAAOC,WAAa,eM/DjDT,CAA6CoF,GCvBxCI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,8BClBOC,EAAe,SAACC,EAAWC,GACtC,OAAO,2BACFD,GACAC,ICADC,EAAe,CACnB3G,MAAO,KACPG,MAAO,KACPS,SAAS,GAELgG,EAAY,SAACjJ,EAAOkJ,GACxB,OAAOL,EAAa7I,EAAO,CACzBwC,MAAO,KACPS,SAAS,KAGPb,EAAc,SAACpC,EAAOkJ,GAC1B,OAAOL,EAAa7I,EAAO,CACzBqC,MAAO6G,EAAO7G,MACdG,MAAO,KACPS,SAAS,KAGPV,EAAW,SAACvC,EAAOkJ,GACvB,OAAOL,EAAa7I,EAAO,CACzBwC,MAAO0G,EAAO1G,MACdS,SAAS,EACT+B,iBAAiB,KAIfmE,GAAa,SAACnJ,EAAOkJ,GACzB,OAAOL,EAAa7I,EAAO,CACzBqC,MAAO,KACP2C,iBAAiB,KAmBNoE,GAfC,WAAmC,IAAlCpJ,EAAiC,uDAAzBgJ,EAAcE,EAAW,uCAChD,OAAQA,EAAO5G,MACb,IRtCsB,aQuCpB,OAAO2G,EAAUjJ,GACnB,IRvCwB,cQwCtB,OAAOoC,EAAYpC,EAAOkJ,GAC5B,IRxCqB,YQyCnB,OAAO3G,EAASvC,EAAOkJ,GACzB,IRzCuB,cQ0CrB,OAAOC,GAAWnJ,GACpB,QACE,OAAOA,ICrCPqJ,GAAkBZ,OAAOa,sCAAwCC,IAEjEC,GAAQC,YAAYL,GAASC,GAAgBK,YAAgBC,OAE7DC,GACJ,kBAAC,IAAD,CAAUJ,MAAOA,IACf,kBAAC,EAAD,OAIJK,IAASC,OAAOF,GAAKG,SAASC,eAAe,SH+GvC,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB3J,MAAK,SAAA4J,GACJA,EAAaC,gBAEd1G,OAAM,SAAAnB,GACL5B,QAAQ4B,MAAMA,EAAM6B,c","file":"static/js/main.01bddde3.chunk.js","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport { List, Card } from \"antd\";\n\nclass MealList extends React.Component {\n  state = {\n    Meals: [{ meal_name: \"\", description: \"\", price_tag: \"\" }],\n    list: [\"a\"],\n  };\n\n  componentWillMount() {\n    axios.get(\"https://shop-281014.nw.r.appspot.com/api/\").then((res) => {\n      this.setState({\n        Meals: res.data,\n        list: [\"b\"],\n      });\n      console.log(res.data);\n      console.log(this.state.Meals[0].meal_name);\n    });\n  }\n\n  render() {\n    return (\n      <div style={{ width: \"75%\", margin: \"auto\" }}>\n        <List\n          style={{ margin: \"auto\", minInlineSize: \"100%\" }}\n          grid={{\n            gutter: 16,\n            xs: 1,\n            sm: 2,\n            md: 3,\n            lg: 4,\n            xl: 5,\n            xxl: 5,\n          }}\n          dataSource={this.state.Meals}\n          renderItem={(item) => (\n            <List.Item>\n              <Card title={item.meal_name} extra={<a href=\"/\">More</a>}>\n                <p>{item.description}</p>\n                <p>{item.price_tag}</p>\n              </Card>\n            </List.Item>\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nexport default MealList;\n","import axios from \"axios\";\nimport * as actionTypes from \"./actionsTypes\";\n\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START,\n  };\n};\n\nexport const authSuccess = (token) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token,\n  };\n};\n\nexport const authFail = (error) => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error,\n  };\n};\n\nexport const logout = () => {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"expirationDate\");\n  return {\n    type: actionTypes.AUTH_LOGOUT,\n  };\n};\n\nexport const checkAuthTimeout = (expirationTime) => {\n  return (dispatch) => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\n\nexport const authLogin = (username, password) => {\n  return (dispatch) => {\n    dispatch(authStart());\n    axios\n      .post(\"https://shop-281014.nw.r.appspot.com/rest-auth/login/\", {\n        username: username,\n        password: password,\n      })\n      .then((res) => {\n        const token = res.data.key;\n        const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"expirationDate\", expirationDate);\n        dispatch(authSuccess(token));\n        dispatch(checkAuthTimeout(3600));\n      })\n      .catch((err) => {\n        dispatch(authFail(err));\n      });\n  };\n};\n\nexport const authSignup = (username, email, password1, password2) => {\n  return (dispatch) => {\n    dispatch(authStart());\n    axios\n      .post(\"https://shop-281014.nw.r.appspot.com/rest-auth/registration/\", {\n        username: username,\n        email: email,\n        password1: password1,\n        password2: password2,\n      })\n      .then((res) => {\n        const token = res.data.key;\n        const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"expirationDate\", expirationDate);\n        dispatch(authSuccess(token));\n        dispatch(checkAuthTimeout(3600));\n      })\n      .catch((err) => {\n        dispatch(authFail(err));\n      });\n  };\n};\n\nexport const authCheckState = () => {\n  return (dispatch) => {\n    const token = localStorage.getItem(\"token\");\n    if (token === undefined) {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        dispatch(authSuccess(token));\n        dispatch(\n          checkAuthTimeout(\n            (expirationDate.getTime() - new Date().getTime()) / 1000\n          )\n        );\n      }\n    }\n  };\n};\n","export const AUTH_START = \"AUTH_START\";\nexport const AUTH_SUCCESS = \"AUTH_SUCCES\";\nexport const AUTH_FAIL = \"AUTH_FAIL\";\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\n","import React from \"react\";\nimport { Form, Input, Button, Spin, Checkbox } from \"antd\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../store/actions/auth\";\n\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport \"./Login.css\";\nconst NormalLoginForm = (props) => {\n  const [form] = Form.useForm();\n  console.log(form.validateFields);\n\n  const onFinish = (values) => {\n    console.log(\"Received values of form: \", values);\n    console.log(props.isAuthenticated);\n    form\n      .validateFields()\n      .then((values) => {\n        props.onAuth(values.username, values.password);\n        // Submit values\n        // submitValues(values);\n      })\n      .catch((errorInfo) => {\n        props.isAuthenticated = false;\n      });\n  };\n  let errorMessage = null;\n  if (props.error) {\n    errorMessage = <p style={{ color: \"red\" }}>{props.error.message}</p>;\n  }\n\n  return (\n    <div>\n      {errorMessage}\n      {props.loading ? (\n        <Spin indicator={Spin} />\n      ) : (\n        <Form\n          form={form}\n          style={{ minWidth: \"10rem\", maxWidth: \"30rem\", margin: \"auto\" }}\n          name=\"normal_login\"\n          className=\"login-form\"\n          initialValues={{\n            remember: true,\n          }}\n          onFinish={onFinish}\n        >\n          <Form.Item\n            name=\"username\"\n            rules={[\n              {\n                required: true,\n                message: \"Please input your Username!\",\n              },\n            ]}\n          >\n            <Input\n              prefix={<UserOutlined className=\"site-form-item-icon\" />}\n              placeholder=\"Username\"\n            />\n          </Form.Item>\n          <Form.Item\n            name=\"password\"\n            rules={[\n              {\n                required: true,\n                message: \"Please input your Password!\",\n              },\n            ]}\n          >\n            <Input\n              prefix={<LockOutlined className=\"site-form-item-icon\" />}\n              type=\"password\"\n              placeholder=\"Password\"\n            />\n          </Form.Item>\n          <Form.Item>\n            <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\n              <Checkbox>Remember me</Checkbox>\n            </Form.Item>\n\n            <p className=\"login-form-forgot\">Forgot password</p>\n          </Form.Item>\n\n          <Form.Item>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              className=\"login-form-button\"\n            >\n              Log in\n            </Button>\n            Or <a href=\"/signup\"> Sign Up!</a>\n          </Form.Item>\n        </Form>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    loading: state.loading,\n    error: state.error,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onAuth: (username, password) =>\n      dispatch(\n        actions.authLogin(username, password),\n        console.log(\"dispatched\")\n      ),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NormalLoginForm);\n","import React from \"react\";\nimport { Form, Input, Tooltip, Checkbox, Button } from \"antd\";\nimport { QuestionCircleOutlined } from \"@ant-design/icons\";\n\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24,\n    },\n    sm: {\n      span: 8,\n    },\n  },\n  wrapperCol: {\n    xs: {\n      span: 24,\n    },\n    sm: {\n      span: 16,\n    },\n  },\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nconst RegistrationForm = () => {\n  const [form] = Form.useForm();\n\n  const onFinish = (values) => {\n    console.log(\"Received values of form: \", values);\n  };\n\n  return (\n    <Form\n      {...formItemLayout}\n      form={form}\n      name=\"register\"\n      onFinish={onFinish}\n      initialValues={{\n        residence: [\"zhejiang\", \"hangzhou\", \"xihu\"],\n        prefix: \"86\",\n      }}\n      scrollToFirstError\n    >\n      <Form.Item\n        name=\"email\"\n        label=\"E-mail\"\n        rules={[\n          {\n            type: \"email\",\n            message: \"The input is not valid E-mail!\",\n          },\n          {\n            required: true,\n            message: \"Please input your E-mail!\",\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        name=\"password\"\n        label=\"Password\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input your password!\",\n          },\n        ]}\n        hasFeedback\n      >\n        <Input.Password />\n      </Form.Item>\n\n      <Form.Item\n        name=\"confirm\"\n        label=\"Confirm Password\"\n        dependencies={[\"password\"]}\n        hasFeedback\n        rules={[\n          {\n            required: true,\n            message: \"Please confirm your password!\",\n          },\n          ({ getFieldValue }) => ({\n            validator(rule, value) {\n              if (!value || getFieldValue(\"password\") === value) {\n                return Promise.resolve();\n              }\n\n              return Promise.reject(\n                \"The two passwords that you entered do not match!\"\n              );\n            },\n          }),\n        ]}\n      >\n        <Input.Password />\n      </Form.Item>\n\n      <Form.Item\n        name=\"nickname\"\n        label={\n          <span>\n            Nickname&nbsp;\n            <Tooltip title=\"What do you want others to call you?\">\n              <QuestionCircleOutlined />\n            </Tooltip>\n          </span>\n        }\n        rules={[\n          {\n            required: true,\n            message: \"Please input your nickname!\",\n            whitespace: true,\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        name=\"agreement\"\n        valuePropName=\"checked\"\n        rules={[\n          {\n            validator: (_, value) =>\n              value\n                ? Promise.resolve()\n                : Promise.reject(\"Should accept agreement\"),\n          },\n        ]}\n        {...tailFormItemLayout}\n      >\n        <Checkbox>I have read the agreement</Checkbox>\n      </Form.Item>\n      <Form.Item {...tailFormItemLayout}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Register\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default RegistrationForm;\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport MealList from \"./containers/MealList\";\nimport Login from \"./containers/Login\";\nimport RegistrationForm from \"./containers/Signup\";\n\nconst BaseRouter = () => (\n  <div>\n    <Route exact path=\"/\" component={MealList}></Route>\n    <Route exact path=\"/login\" component={Login}></Route>\n    <Route exact path=\"/signup\" component={RegistrationForm}></Route>\n  </div>\n);\n\nexport default BaseRouter;\n","import React from \"react\";\nimport { Layout, Menu } from \"antd\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../store/actions/auth\";\nconst { Header, Content } = Layout;\n\nclass CustomLayout extends React.Component {\n  render() {\n    return (\n      <Layout>\n        <Header className=\"header\">\n          <div className=\"logo\" />\n          <Menu style={{ float: \"right\" }} theme=\"dark\" mode=\"horizontal\">\n            {console.log(`state is `)}\n            {console.log(this)}\n            {console.log(this.props)}\n\n            {this.props.isAuthenticated\n              ? (console.log(`isAuthenticated: ${this.props.isAuthenticated}`),\n                (\n                  <Menu.Item key=\"2\" onClick={this.props.logout}>\n                    Logout\n                  </Menu.Item>\n                ))\n              : (console.log(`isAuthenticated: ${this.props.isAuthenticated}`),\n                (\n                  <Menu.Item key=\"1\">\n                    <Link to=\"/login\">Login</Link>\n                  </Menu.Item>\n                ))}\n          </Menu>\n        </Header>\n        <Layout>\n          <Layout style={{ padding: \"0 24px 24px\" }}>\n            <Content\n              className=\"site-layout-background\"\n              style={{\n                padding: 24,\n                margin: 0,\n                minHeight: 280,\n              }}\n            >\n              {this.props.children}\n            </Content>\n          </Layout>\n        </Layout>\n      </Layout>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    logout: () => dispatch(actions.logout()),\n  };\n};\n\nexport default withRouter(connect(null, mapDispatchToProps)(CustomLayout));\n","import React, { Component } from \"react\";\nimport BaseRouter from \"./routes\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport CustomLayout from \"./containers/CustomLayout\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"./store/actions/auth\";\nclass App extends Component {\n  componentDidMount() {\n    this.props.onTryAutoSignup();\n  }\n  render() {\n    return (\n      <div>\n        <Router>\n          <CustomLayout {...this.props}>\n            <BaseRouter />\n          </CustomLayout>\n        </Router>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: state.token !== null,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState()),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const updateObject = (oldObject, updateProperties) => {\n  return {\n    ...oldObject,\n    ...updateProperties,\n  };\n};\n","import * as actionTypes from \"../actions/actionsTypes\";\nimport { updateObject } from \"../utility\";\n\nconst initialState = {\n  token: null,\n  error: null,\n  loading: false,\n};\nconst authStart = (state, action) => {\n  return updateObject(state, {\n    error: null,\n    loading: true,\n  });\n};\nconst authSuccess = (state, action) => {\n  return updateObject(state, {\n    token: action.token,\n    error: null,\n    loading: false,\n  });\n};\nconst authFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error,\n    loading: false,\n    isAuthenticated: false,\n  });\n};\n\nconst authLogout = (state, action) => {\n  return updateObject(state, {\n    token: null,\n    isAuthenticated: false,\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.AUTH_START:\n      return authStart(state, action);\n    case actionTypes.AUTH_SUCCESS:\n      return authSuccess(state, action);\n    case actionTypes.AUTH_FAIL:\n      return authFail(state, action);\n    case actionTypes.AUTH_LOGOUT:\n      return authLogout(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, compose, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\n\nimport reducer from \"./store/reducers/auth\";\n\nconst composeEnhances = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducer, composeEnhances(applyMiddleware(thunk)));\n\nconst app = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}