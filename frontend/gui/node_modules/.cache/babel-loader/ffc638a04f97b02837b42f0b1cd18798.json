{"ast":null,"code":"var _jsxFileName = \"/home/ciurkoj/Documents/shop/frontend/gui/src/containers/Login.js\";\nimport { Form, Input, Button, Select, Checkbox, Spin } from \"antd\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\nimport { connect } from \"react-redux\";\nimport React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport * as actions from \"../store/actions/auth\";\nconst antIcon = /*#__PURE__*/React.createElement(LoadingOutlined, {\n  type: \"loading\",\n  style: {\n    fontSize: 24\n  },\n  spin: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 3\n  }\n});\nconst {\n  Option\n} = Select;\nconst layout = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.loading,\n    error: state.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (username, password) => dispatch(actions.authLogin(username, password))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NormalLoginForm = props => {\n  const [form] = Form.useForm();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.form.validateFields((err, values) => {\n      if (!err) {\n        this.props.onAuth(values.userName, values.password);\n        this.props.history.push(\"/\");\n      }\n    });\n\n    const onGenderChange = value => {\n      switch (value) {\n        case \"male\":\n          form.setFieldsValue({\n            note: \"Hi, man!\"\n          });\n          return;\n\n        case \"female\":\n          form.setFieldsValue({\n            note: \"Hi, lady!\"\n          });\n          return;\n\n        case \"other\":\n          form.setFieldsValue({\n            note: \"Hi there!\"\n          });\n      }\n    };\n\n    const onFinish = values => {\n      console.log(props);\n      console.log(values);\n    };\n\n    const onReset = () => {\n      form.resetFields();\n    };\n\n    const onFill = () => {\n      form.setFieldsValue({\n        note: \"Hello world!\",\n        gender: \"male\"\n      });\n    };\n\n    return /*#__PURE__*/React.createElement(Form, Object.assign({}, layout, {\n      form: form,\n      name: \"control-hooks\",\n      onFinish: onFinish,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"note\",\n      label: \"Note\",\n      rules: [{\n        required: true\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"gender\",\n      label: \"Gender\",\n      rules: [{\n        required: true\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      placeholder: \"Select a option and change input text above\",\n      onChange: onGenderChange,\n      allowClear: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Option, {\n      value: \"male\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 15\n      }\n    }, \"male\"), /*#__PURE__*/React.createElement(Option, {\n      value: \"female\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 15\n      }\n    }, \"female\"), /*#__PURE__*/React.createElement(Option, {\n      value: \"other\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }\n    }, \"other\"))), /*#__PURE__*/React.createElement(Form.Item, {\n      noStyle: true,\n      shouldUpdate: (prevValues, currentValues) => prevValues.gender !== currentValues.gender,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }\n    }, ({\n      getFieldValue\n    }) => getFieldValue(\"gender\") === \"other\" ? /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"customizeGender\",\n      label: \"Customize Gender\",\n      rules: [{\n        required: true\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 19\n      }\n    })) : null), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, tailLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }\n    }, \"Submit\"), /*#__PURE__*/React.createElement(Button, {\n      htmlType: \"button\",\n      onClick: onReset,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }\n    }, \"Reset\"), /*#__PURE__*/React.createElement(Button, {\n      type: \"link\",\n      htmlType: \"button\",\n      onClick: onFill,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }\n    }, \"Fill form\")));\n  };\n});","map":{"version":3,"sources":["/home/ciurkoj/Documents/shop/frontend/gui/src/containers/Login.js"],"names":["Form","Input","Button","Select","Checkbox","Spin","LoadingOutlined","connect","React","NavLink","actions","antIcon","fontSize","Option","layout","labelCol","span","wrapperCol","tailLayout","offset","mapStateToProps","state","loading","error","mapDispatchToProps","dispatch","onAuth","username","password","authLogin","NormalLoginForm","props","form","useForm","handleSubmit","e","preventDefault","validateFields","err","values","userName","history","push","onGenderChange","value","setFieldsValue","note","onFinish","console","log","onReset","resetFields","onFill","gender","required","prevValues","currentValues","getFieldValue"],"mappings":"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","sourcesContent":["import { Form, Input, Button, Select, Checkbox, Spin } from \"antd\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\nimport { connect } from \"react-redux\";\nimport React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport * as actions from \"../store/actions/auth\";\nconst antIcon = (\n  <LoadingOutlined type=\"loading\" style={{ fontSize: 24 }} spin />\n);\n\nconst { Option } = Select;\nconst layout = {\n  labelCol: {\n    span: 8,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16,\n  },\n};\nconst mapStateToProps = (state) => {\n  return {\n    loading: state.loading,\n    error: state.error,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onAuth: (username, password) =>\n      dispatch(actions.authLogin(username, password)),\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(\n  (NormalLoginForm = (props) => {\n    const [form] = Form.useForm();\n    const handleSubmit = (e) => {\n      e.preventDefault();\n      props.form.validateFields((err, values) => {\n        if (!err) {\n          this.props.onAuth(values.userName, values.password);\n          this.props.history.push(\"/\");\n        }\n      });\n\n      const onGenderChange = (value) => {\n        switch (value) {\n          case \"male\":\n            form.setFieldsValue({\n              note: \"Hi, man!\",\n            });\n            return;\n\n          case \"female\":\n            form.setFieldsValue({\n              note: \"Hi, lady!\",\n            });\n            return;\n\n          case \"other\":\n            form.setFieldsValue({\n              note: \"Hi there!\",\n            });\n        }\n      };\n\n      const onFinish = (values) => {\n        console.log(props);\n        console.log(values);\n      };\n\n      const onReset = () => {\n        form.resetFields();\n      };\n\n      const onFill = () => {\n        form.setFieldsValue({\n          note: \"Hello world!\",\n          gender: \"male\",\n        });\n      };\n\n      return (\n        <Form {...layout} form={form} name=\"control-hooks\" onFinish={onFinish}>\n          <Form.Item\n            name=\"note\"\n            label=\"Note\"\n            rules={[\n              {\n                required: true,\n              },\n            ]}\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item\n            name=\"gender\"\n            label=\"Gender\"\n            rules={[\n              {\n                required: true,\n              },\n            ]}\n          >\n            <Select\n              placeholder=\"Select a option and change input text above\"\n              onChange={onGenderChange}\n              allowClear\n            >\n              <Option value=\"male\">male</Option>\n              <Option value=\"female\">female</Option>\n              <Option value=\"other\">other</Option>\n            </Select>\n          </Form.Item>\n          <Form.Item\n            noStyle\n            shouldUpdate={(prevValues, currentValues) =>\n              prevValues.gender !== currentValues.gender\n            }\n          >\n            {({ getFieldValue }) =>\n              getFieldValue(\"gender\") === \"other\" ? (\n                <Form.Item\n                  name=\"customizeGender\"\n                  label=\"Customize Gender\"\n                  rules={[\n                    {\n                      required: true,\n                    },\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n              ) : null\n            }\n          </Form.Item>\n          <Form.Item {...tailLayout}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Submit\n            </Button>\n            <Button htmlType=\"button\" onClick={onReset}>\n              Reset\n            </Button>\n            <Button type=\"link\" htmlType=\"button\" onClick={onFill}>\n              Fill form\n            </Button>\n          </Form.Item>\n        </Form>\n      );\n    };\n  })\n);\n"]},"metadata":{},"sourceType":"module"}