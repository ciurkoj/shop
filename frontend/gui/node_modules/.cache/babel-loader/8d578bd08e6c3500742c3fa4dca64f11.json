{"ast":null,"code":"var _jsxFileName = \"/home/ciurkoj/Documents/shop/frontend/gui/src/containers/Login.js\";\nimport { Form, Input, Button, Checkbox, Spin } from \"antd\";\nimport { LoadingOutlined, UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport { connect } from \"react-redux\";\nimport React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport * as actions from \"../store/actions/auth\";\nconst antIcon = /*#__PURE__*/React.createElement(LoadingOutlined, {\n  type: \"loading\",\n  style: {\n    fontSize: 24\n  },\n  spin: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 3\n  }\n});\n\nclass NormalLoginForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onFinish = values => {\n      console.log(this.props);\n      console.log(\"Received values of form: \", values);\n    };\n  }\n\n  render() {\n    let errorMessage = null;\n\n    if (this.props.error) {\n      errorMessage = /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 22\n        }\n      }, this.props.error.message);\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, errorMessage, this.props.loading ? /*#__PURE__*/React.createElement(Spin, {\n      indicator: antIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    }) : /*#__PURE__*/React.createElement(Form, {\n      name: \"normal_login\",\n      className: \"login-form\",\n      initialValues: {\n        remember: true\n      },\n      onFinish: this.onFinish,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"username\",\n      rules: [{\n        required: true,\n        message: \"Please input your Username!\"\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      prefix: /*#__PURE__*/React.createElement(UserOutlined, {\n        className: \"site-form-item-icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }\n      }),\n      placeholder: \"Username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"password\",\n      rules: [{\n        required: true,\n        message: \"Please input your Password!\"\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      prefix: /*#__PURE__*/React.createElement(LockOutlined, {\n        className: \"site-form-item-icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }\n      }),\n      type: \"password\",\n      placeholder: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"remember\",\n      valuePropName: \"checked\",\n      noStyle: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, \"Remember me\")), /*#__PURE__*/React.createElement(\"a\", {\n      className: \"login-form-forgot\",\n      href: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }\n    }, \"Forgot password\")), /*#__PURE__*/React.createElement(Form.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      className: \"login-form-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }\n    }, \"Log in\"), \"Or \", /*#__PURE__*/React.createElement(\"a\", {\n      href: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 18\n      }\n    }, \"register now!\"))));\n  }\n\n}\n\nconst WrappedNormalLoginForm = Form.useForm()(NormalLoginForm);\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.loading,\n    error: state.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (username, password) => dispatch(actions.authLogin(username, password))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedNormalLoginForm);","map":{"version":3,"sources":["/home/ciurkoj/Documents/shop/frontend/gui/src/containers/Login.js"],"names":["Form","Input","Button","Checkbox","Spin","LoadingOutlined","UserOutlined","LockOutlined","connect","React","NavLink","actions","antIcon","fontSize","NormalLoginForm","Component","onFinish","values","console","log","props","render","errorMessage","error","message","loading","remember","required","WrappedNormalLoginForm","useForm","mapStateToProps","state","mapDispatchToProps","dispatch","onAuth","username","password","authLogin"],"mappings":"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","sourcesContent":["import { Form, Input, Button, Checkbox, Spin } from \"antd\";\nimport { LoadingOutlined, UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport { connect } from \"react-redux\";\nimport React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport * as actions from \"../store/actions/auth\";\nconst antIcon = (\n  <LoadingOutlined type=\"loading\" style={{ fontSize: 24 }} spin />\n);\n\nclass NormalLoginForm extends React.Component {\n  onFinish = (values) => {\n    console.log(this.props);\n    console.log(\"Received values of form: \", values);\n  };\n\n  render() {\n    let errorMessage = null;\n    if (this.props.error) {\n      errorMessage = <p>{this.props.error.message}</p>;\n    }\n    return (\n      <div>\n        {errorMessage}\n        {this.props.loading ? (\n          <Spin indicator={antIcon} />\n        ) : (\n          <Form\n            name=\"normal_login\"\n            className=\"login-form\"\n            initialValues={{ remember: true }}\n            onFinish={this.onFinish}\n          >\n            <Form.Item\n              name=\"username\"\n              rules={[\n                { required: true, message: \"Please input your Username!\" },\n              ]}\n            >\n              <Input\n                prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                placeholder=\"Username\"\n              />\n            </Form.Item>\n            <Form.Item\n              name=\"password\"\n              rules={[\n                { required: true, message: \"Please input your Password!\" },\n              ]}\n            >\n              <Input\n                prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                type=\"password\"\n                placeholder=\"Password\"\n              />\n            </Form.Item>\n            <Form.Item>\n              <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\n                <Checkbox>Remember me</Checkbox>\n              </Form.Item>\n\n              <a className=\"login-form-forgot\" href=\"\">\n                Forgot password\n              </a>\n            </Form.Item>\n\n            <Form.Item>\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                className=\"login-form-button\"\n              >\n                Log in\n              </Button>\n              Or <a href=\"\">register now!</a>\n            </Form.Item>\n          </Form>\n        )}\n      </div>\n    );\n  }\n}\n\nconst WrappedNormalLoginForm = Form.useForm()(NormalLoginForm);\n\nconst mapStateToProps = (state) => {\n  return {\n    loading: state.loading,\n    error: state.error,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onAuth: (username, password) =>\n      dispatch(actions.authLogin(username, password)),\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(WrappedNormalLoginForm);\n"]},"metadata":{},"sourceType":"module"}