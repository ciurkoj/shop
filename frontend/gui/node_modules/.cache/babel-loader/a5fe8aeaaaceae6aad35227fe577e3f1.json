{"ast":null,"code":"import * as actionTypes from \"./actionsTypes\";\nimport Axios from \"axios\";\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccess = toket => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token\n  };\n};\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport const logout = () => {\n  localStorage.removeItem(\"user\");\n  localStorage.removeItem(\"expirationDate\");\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\nexport const checkAuthTimeout = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\nexport const authLogin = (username, password) => {\n  return dispatch => {\n    dispatch(authStart());\n    Axios.post(\"http://127.0.0.1:8000/rest-auth/login\", {\n      username: username,\n      password: password\n    }).then(res => {\n      const token = res.data.key;\n      const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n      localStorage.setItem(\"token\", token);\n      localStorage.setItem(\"expirationDate\", expirationDate);\n      dispatch(authSuccess(token));\n      dispatch(checkAuthTimeout(3600));\n    }).catch(err => {\n      dispatch(authFail(err));\n    });\n  };\n};\nexport const authSignup = (username, email, password1, password2) => {\n  return dispatch => {\n    dispatch(authStart());\n    Axios.post(\"http://127.0.0.1:8000/rest-auth/registration\", {\n      username: username,\n      email: email,\n      password1: password1,\n      password2: password2\n    }).then(res => {\n      const token = res.data.key;\n      const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n      localStorage.setItem(\"token\", token);\n      localStorage.setItem(\"expirationDate\", expirationDate);\n      dispatch(authSuccess(token));\n      dispatch(checkAuthTimeout(3600));\n    }).catch(err => {\n      dispatch(authFail(err));\n    });\n  };\n};\nexport const authCheckState = () => {\n  return dispatch => {\n    const token = localStorage.getItem(\"token\");\n\n    if (token === undefined) {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\n    }\n  };\n};","map":{"version":3,"sources":["/home/ciurkoj/Documents/shop/frontend/gui/src/store/actions/auth.js"],"names":["actionTypes","Axios","authStart","type","AUTH_START","authSuccess","toket","AUTH_SUCCESS","token","authFail","error","AUTH_FAIL","logout","localStorage","removeItem","AUTH_LOGOUT","checkAuthTimeout","expirationTime","dispatch","setTimeout","authLogin","username","password","post","then","res","data","key","expirationDate","Date","getTime","setItem","catch","err","authSignup","email","password1","password2","authCheckState","getItem","undefined"],"mappings":"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","sourcesContent":["import * as actionTypes from \"./actionsTypes\";\nimport Axios from \"axios\";\n\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START,\n  };\n};\n\nexport const authSuccess = (toket) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token,\n  };\n};\nexport const authFail = (error) => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error,\n  };\n};\n\nexport const logout = () => {\n  localStorage.removeItem(\"user\");\n  localStorage.removeItem(\"expirationDate\");\n  return {\n    type: actionTypes.AUTH_LOGOUT,\n  };\n};\n\nexport const checkAuthTimeout = (expirationTime) => {\n  return (dispatch) => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\n\nexport const authLogin = (username, password) => {\n  return (dispatch) => {\n    dispatch(authStart());\n    Axios.post(\"http://127.0.0.1:8000/rest-auth/login\", {\n      username: username,\n      password: password,\n    })\n      .then((res) => {\n        const token = res.data.key;\n        const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"expirationDate\", expirationDate);\n        dispatch(authSuccess(token));\n        dispatch(checkAuthTimeout(3600));\n      })\n      .catch((err) => {\n        dispatch(authFail(err));\n      });\n  };\n};\n\nexport const authSignup = (username, email, password1, password2) => {\n  return (dispatch) => {\n    dispatch(authStart());\n    Axios.post(\"http://127.0.0.1:8000/rest-auth/registration\", {\n      username: username,\n      email: email,\n      password1: password1,\n      password2: password2,\n    })\n      .then((res) => {\n        const token = res.data.key;\n        const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"expirationDate\", expirationDate);\n        dispatch(authSuccess(token));\n        dispatch(checkAuthTimeout(3600));\n      })\n      .catch((err) => {\n        dispatch(authFail(err));\n      });\n  };\n};\n\nexport const authCheckState = () => {\n  return (dispatch) => {\n    const token = localStorage.getItem(\"token\");\n    if (token === undefined) {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}