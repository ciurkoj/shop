{"ast":null,"code":"import _slicedToArray from\"/home/ciurkoj/Documents/shop/frontend/gui/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from\"react\";import{Form,Input,Button,Spin,Checkbox}from\"antd\";import{connect}from\"react-redux\";import*as actions from\"../store/actions/auth\";import{UserOutlined,LockOutlined}from\"@ant-design/icons\";import\"./Login.css\";var NormalLoginForm=function NormalLoginForm(props){var _Form$useForm=Form.useForm(),_Form$useForm2=_slicedToArray(_Form$useForm,1),form=_Form$useForm2[0];console.log(props);var onFinish=function onFinish(values){console.log(\"Received values of form: \",values);console.log(props.isAuthenticated);console.log(props.match);props.onAuth(values.username,values.password);};var errorMessage=null;if(props.error){errorMessage=/*#__PURE__*/React.createElement(\"p\",{style:{color:\"red\"}},props.error.message);}return/*#__PURE__*/React.createElement(\"div\",null,errorMessage,props.loading?/*#__PURE__*/React.createElement(Spin,{indicator:Spin}):/*#__PURE__*/React.createElement(Form,{form:form,style:{minWidth:\"10rem\",maxWidth:\"30rem\",margin:\"auto\"},name:\"normal_login\",className:\"login-form\",initialValues:{remember:true},onFinish:onFinish},/*#__PURE__*/React.createElement(Form.Item,{name:\"username\",rules:[{required:true,message:\"Please input your Username!\"}]},/*#__PURE__*/React.createElement(Input,{prefix:/*#__PURE__*/React.createElement(UserOutlined,{className:\"site-form-item-icon\"}),placeholder:\"Username\"})),/*#__PURE__*/React.createElement(Form.Item,{name:\"password\",rules:[{required:true,message:\"Please input your Password!\"}]},/*#__PURE__*/React.createElement(Input,{prefix:/*#__PURE__*/React.createElement(LockOutlined,{className:\"site-form-item-icon\"}),type:\"password\",placeholder:\"Password\"})),/*#__PURE__*/React.createElement(Form.Item,null,/*#__PURE__*/React.createElement(Form.Item,{name:\"remember\",valuePropName:\"checked\",noStyle:true},/*#__PURE__*/React.createElement(Checkbox,null,\"Remember me\")),/*#__PURE__*/React.createElement(\"p\",{className:\"login-form-forgot\"},\"Forgot password\")),/*#__PURE__*/React.createElement(Form.Item,null,/*#__PURE__*/React.createElement(Button,{type:\"primary\",htmlType:\"submit\",className:\"login-form-button\"},\"Log in\"),\"Or \",/*#__PURE__*/React.createElement(\"a\",{href:\"/signup\"},\" Sign Up!\"))));};var mapStateToProps=function mapStateToProps(state){return{loading:state.loading,error:state.error};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{onAuth:function onAuth(username,password){return dispatch(actions.authLogin(username,password));}};};export default connect(mapStateToProps,mapDispatchToProps)(NormalLoginForm);","map":{"version":3,"sources":["/home/ciurkoj/Documents/shop/frontend/gui/src/containers/Login.js"],"names":["React","Form","Input","Button","Spin","Checkbox","connect","actions","UserOutlined","LockOutlined","NormalLoginForm","props","useForm","form","console","log","onFinish","values","isAuthenticated","match","onAuth","username","password","errorMessage","error","color","message","loading","minWidth","maxWidth","margin","remember","required","mapStateToProps","state","mapDispatchToProps","dispatch","authLogin"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Form, Input, Button, Spin, Checkbox } from \"antd\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../store/actions/auth\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport \"./Login.css\";\nconst NormalLoginForm = (props) => {\n  const [form] = Form.useForm();\n  console.log(props);\n\n  const onFinish = (values) => {\n    console.log(\"Received values of form: \", values);\n    console.log(props.isAuthenticated);\n    console.log(props.match);\n\n    props.onAuth(values.username, values.password);\n  };\n  let errorMessage = null;\n  if (props.error) {\n    errorMessage = <p style={{ color: \"red\" }}>{props.error.message}</p>;\n  }\n\n  return (\n    <div>\n      {errorMessage}\n      {props.loading ? (\n        <Spin indicator={Spin} />\n      ) : (\n        <Form\n          form={form}\n          style={{ minWidth: \"10rem\", maxWidth: \"30rem\", margin: \"auto\" }}\n          name=\"normal_login\"\n          className=\"login-form\"\n          initialValues={{\n            remember: true,\n          }}\n          onFinish={onFinish}\n        >\n          <Form.Item\n            name=\"username\"\n            rules={[\n              {\n                required: true,\n                message: \"Please input your Username!\",\n              },\n            ]}\n          >\n            <Input\n              prefix={<UserOutlined className=\"site-form-item-icon\" />}\n              placeholder=\"Username\"\n            />\n          </Form.Item>\n          <Form.Item\n            name=\"password\"\n            rules={[\n              {\n                required: true,\n                message: \"Please input your Password!\",\n              },\n            ]}\n          >\n            <Input\n              prefix={<LockOutlined className=\"site-form-item-icon\" />}\n              type=\"password\"\n              placeholder=\"Password\"\n            />\n          </Form.Item>\n          <Form.Item>\n            <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\n              <Checkbox>Remember me</Checkbox>\n            </Form.Item>\n\n            <p className=\"login-form-forgot\">Forgot password</p>\n          </Form.Item>\n\n          <Form.Item>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              className=\"login-form-button\"\n            >\n              Log in\n            </Button>\n            Or <a href=\"/signup\"> Sign Up!</a>\n          </Form.Item>\n        </Form>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    loading: state.loading,\n    error: state.error,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onAuth: (username, password) =>\n      dispatch(actions.authLogin(username, password)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NormalLoginForm);\n"]},"metadata":{},"sourceType":"module"}